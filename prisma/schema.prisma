generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  doB       DateTime? @default(now())
  gender    String?
  address   String?
  phone     String?
  avatar    String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())

  Purchase   Purchase[]
  UserTokens UserTokens[]
}

model UserTokens {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int      // Thay String bằng Int để khớp với User.id
  refreshToken String
  family      String   @unique
  browserInfo String?
  expiresAt   DateTime
  createdAt   DateTime @default(now())
}

model Product {
  id                 Int       @id @default(autoincrement())
  name               String    @unique
  urlName            String    @unique
  picture            String?
  basePrice          Decimal
  discountPercentage Int       @default(0)
  stock              Int       @default(0)
  description        String?
  createdAt          DateTime  @default(now())
  categories         Category[]
  Purchase           Purchase[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Purchase {
  id           Int       @id @default(autoincrement())
  user         User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId       Int?      // Thay String bằng Int để khớp với User.id
  product      Product   @relation(fields: [productId], references: [id])
  productId    Int       // Thay String bằng Int để khớp với Product.id
  amount       Int       @default(1)
  totalPrice   Decimal
  reviewNote   Int?
  reviewComment String?
  createdAt    DateTime  @default(now())
}

enum Role {
  USER
  ADMIN
}
